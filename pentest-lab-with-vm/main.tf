terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = ">2.31.1"
    }
  }
}

provider "azurerm" {
  features {}
}

# create resource group
resource "azurerm_resource_group" "rg" {
  name     = "PenTestLab_RG"
  location = "southcentralus"
  tags = {
    environment = "development"
    source      = "terraform"
    owner       = "Tim C"
  }
}

# create virtual network
resource "azurerm_virtual_network" "vnet" {
  name                = "PenTestLab"
  address_space       = ["10.0.0.0/16"]
  location            = "southcentralus"
  resource_group_name = "PenTestLab_RG"
}

# create subnet
resource "azurerm_subnet" "subnet" {
  name                 = "PenTestLabA"
  resource_group_name  = "PenTestLab_RG"
  virtual_network_name = azurerm_virtual_network.vnet.name
  address_prefixes     = ["10.0.1.0/24"]
}

# create public ip address
resource "azurerm_public_ip" "publicip" {
  name                = "pentest-natgateway-publicip"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  allocation_method   = "Static"
  sku                 = "Standard"
  zones               = ["1"]
}

resource "azurerm_public_ip_prefix" "publicipprefix" {
  name                = "pentest-natgateway-publicipprefix"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  prefix_length       = 30
  zones               = ["1"]
}

# create NAT gateway
resource "azurerm_nat_gateway" "natgateway" {
  name                    = "pentest-nat-gateway"
  location                = azurerm_resource_group.rg.location
  resource_group_name     = azurerm_resource_group.rg.name
  sku_name                = "Standard"
  idle_timeout_in_minutes = 10
  zones                   = ["1"]
}

# create the virtual machine
resource "azurerm_network_interface" "netinface" {
  name                = "pentest-virtualmachine-nic"
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}

resource "azurerm_linux_virtual_machine" "examplevm" {
  name                            = "pentest-virtualmachine"
  resource_group_name             = azurerm_resource_group.rg.name
  location                        = azurerm_resource_group.rg.location
  size                            = "Standard_D2s_v3"
  admin_username                  = "randomusername"
  admin_password                  = "randomBL1Hq9iddonotusethispasswordinproduction"
  disable_password_authentication = false
  network_interface_ids = [
    azurerm_network_interface.netinface.id,
  ]

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }

  os_disk {
    storage_account_type = "Standard_LRS"
    caching              = "ReadWrite"
  }

  tags = {
    environment = "development"
    source      = "terraform"
    owner       = "Tim C"
  }

}

# example network security group
resource "azurerm_network_security_group" "examplesecuritygroup" {
  name                = "pentest-networksecuritygroup"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name

  security_rule {
    name                       = "pentesttool_inbound"
    priority                   = 101
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "6666"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  tags = {
    environment = "development"
    source      = "terraform"
    owner       = "Tim C"
  }
}

# example network security group and subnet association
resource "azurerm_subnet_network_security_group_association" "examplensgassociate" {
  subnet_id                 = azurerm_subnet.subnet.id
  network_security_group_id = azurerm_network_security_group.examplesecuritygroup.id
}
